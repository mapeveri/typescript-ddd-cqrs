apiVersion: v1
kind: Pod
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml -o .k8s
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.network/typescript-ddd-cqrs-default: "true"
    io.kompose.service: app
  name: app
spec:
  containers:
    - env:
        - name: RABBITMQ_USER
          valueFrom:
            configMapKeyRef:
              key: RABBITMQ_USER
              name: appenv
        - name: RABBITMQ_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: RABBITMQ_PASSWORD
              name: appenv
        - name: RABBITMQ_EVENTS_QUEUE
          valueFrom:
            configMapKeyRef:
              key: RABBITMQ_EVENTS_QUEUE
              name: appenv
        - name: RABBITMQ_HOST
          valueFrom:
            configMapKeyRef:
              key: RABBITMQ_HOST
              name: appenv
        - name: FRONTED_URL
          valueFrom:
            configMapKeyRef:
              key: FRONTED_URL
              name: appenv
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              key: GOOGLE_CLIENT_ID
              name: appenv
        - name: JWT_SECRET
          valueFrom:
            configMapKeyRef:
              key: JWT_SECRET
              name: appenv
        - name: MONGO_DB_DATABASE
          valueFrom:
            configMapKeyRef:
              key: MONGO_DB_DATABASE
              name: appenv
        - name: MONGO_DB_URL
          valueFrom:
            configMapKeyRef:
              key: MONGO_DB_URL
              name: appenv
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              key: NODE_ENV
              name: appenv
        - name: POSTGRESQL_DB_URL
          valueFrom:
            configMapKeyRef:
              key: POSTGRESQL_DB_URL
              name: appenv
        - name: POSTGRES_DATABASE
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DATABASE
              name: appenv
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: appenv
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_HOST
              name: appenv
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: appenv
        - name: SERVER_PORT
          valueFrom:
            configMapKeyRef:
              key: SERVER_PORT
              name: appenv
      image: mapeveri/languages:latest
      name: languages-container
      ports:
        - containerPort: 4000
          hostPort: 4000
          protocol: TCP
      resources: {}
      volumeMounts:
        - mountPath: /var/www/html/languages
          name: app-claim0
        - mountPath: /var/www/html/languages/.env
          subPath: .env
          name: env-file
  restartPolicy: OnFailure
  volumes:
    - name: app-claim0
      persistentVolumeClaim:
        claimName: app-claim0
    - name: env-file
      configMap:
        name: appenv
        items:
          - key: .env
            path: .env
status: {}
